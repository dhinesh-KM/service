http:
  port: ${PORT}
  cors:
    origin: "*"
    methods: "GET, POST, PUT, DELETE"

apiEndpoints:
  consumer:
    host: "*"
    paths: "/api/v1/consumers/*"
  document:
    host: "*"
    paths: "/api/v1/documents/*"

serviceEndpoints:
  consumerService:
    url: ${CONSUMER_SERVICE_URL}
  documentService:
    url: ${DOCUMENT_SERVICE_URL}
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
pipelines:
  consumerPipeline:
    apiEndpoints:
      - consumer
    policies:
      - cors:
          action:
            origin: "*"
            methods: "GET, POST, PUT, DELETE"
      - log:
          action:
            message: "successfully authenticated"
      - proxy:
          action:
            serviceEndpoint: consumerService
            changeOrigin: true
      - log:
          action:
            message: "consumer request proxy to consumer service "

  documentPipeline:
    apiEndpoints:
      - document
    policies:
      - cors:
          action:
            origin: "*"
            methods: "GET, POST, PUT, DELETE"
      - proxy:
          action:
            serviceEndpoint: documentService
            changeOrigin: true
      - log:
          action:
            message: "document request proxy to document service "
